library(RMySQL)
require(RMySQL)
install.packages(RMySQL)
install.packags(csv)
install.packages(csv)
install.packages("RMySQL")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
require("RMySQL")
plot(cars)
require(RMySQL)
require(XLConnect)
require("RMySQL")
require("XLConnect")
require("RMySQL")
require("XLConnect")
require("RMySQL")
install.packages("XLConnect")
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
library(rJava)
library(rJava)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
require(p, character.only = TRUE)
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
install.packages("rJava",type='source')
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
install.packages("XLConnect")
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
library("XLConnect")
exit
quit
quit!
exit
q
q()
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
install.packages("XLConnect")
install.packages("rJava",type='source')
library("XLConnect")
library("rJava")
library("rJava")
library("XLConnect")
library("XLConnect")
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
library("rJava")
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("RMySQL")
usePackage("XLConnect")
setwd("~/pCloud Sync/work/2017/EarlyChildhoodDevelopment")
setwd("~/pCloud Sync/work/2017/EarlyChildhoodDevelopment")
df <- readWorksheetFromFile("ECD Research Pilot Sampling Frame.xlsx",
sheet=1,
startRow = 4,
endCol = 2)
setwd("~/pCloud Sync/work/2017/EarlyChildhoodDevelopment")
dfFacilities <- readWorksheetFromFile("ECD Research Pilot Sampling Frame.xlsx",
sheet=3,
startRow = 1,
endCol = 6)
setwd("~/pCloud Sync/work/2017/EarlyChildhoodDevelopment")
dfFacilities <- readWorksheetFromFile("ECD Research Pilot Sampling Frame.xlsx",
sheet=3,
startRow = 1,
endCol = 6)
head(dfFacilities)
head(dfFacilities)
dfFacilities(["subdistrict"])
head(dfFacilities)
dfFacilities(,["subdistrict"])
head(dfFacilities)
dfFacilities(,['subdistrict'])
head(dfFacilities)
dfFacilities[,'subdistrict']
head(dfFacilities)
distinct(dfFacilities[,'subdistrict'])
head(dfFacilities)
distinct(dfFacilities[,'subdistrict'])
head(dfFacilities)
unique(dfFacilities[,'subdistrict'])
unique(dfFacilities[,'subdistrict'])
head(dfFacilities)
unique(dfFacilities[,'province'])
con <- dbConnect(MySQL(), user="root",
dbname="charles", host="localhost",client.flag=CLIENT_MULTI_STATEMENTS)
dbListTables(con)
# watch out with the overwrite argument it does what it says :)
dbDisconnect(con)
con <- dbConnect(MySQL(), user="root",
dbname="charles", host="localhost",client.flag=CLIENT_MULTI_STATEMENTS)
dbListTables(con)
dbWriteTable(con,"facilities",dfFacilities,overwrite=T)
# watch out with the overwrite argument it does what it says :)
dbDisconnect(con)
# watch out with the overwrite argument it does what it says :)
dbDisconnect(con)
setwd("~/pCloud Sync/work/2017/EarlyChildhoodDevelopment")
dfFacilities <- readWorksheetFromFile("ECD Research Pilot Sampling Frame.xlsx",
sheet=3,
startRow = 1,
endCol = 6)
dfMomConnect <- readWorksheetFromFile("ECD Research Pilot Sampling Frame.xlsx",
sheet=4,
startRow = 1,
endCol = 5)
head(dfFacilities)
head(dfMomConnect)
